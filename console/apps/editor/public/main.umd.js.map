{"version":3,"file":"main.umd.js","sources":["../src/Runtime/example.tsx","../src/Runtime/index.ts","../src/Plugin/loader.ts","../src/Render/lazy.tsx","../src/Render/render.tsx"],"sourcesContent":["import React from \"react\";\n\n\nconst Example: React.FC<{\n    error?: any,\n    setError?: (val: string) => void\n}> = ({error, setError}) => {\n\n\n    return <div>\n\n        <p>error：{error}</p>\n\n        <button onClick={() => {\n            setError && setError(new Date().valueOf().toString())\n        }}>client\n        </button>\n    </div>\n}\n\nexport default Example","import Example from './example.tsx'\n\ninterface RuntimeI {\n    readonly version: string;\n}\n\nclass Runtime implements RuntimeI {\n    readonly version: string = \"1.0.0\";\n}\n\n\nexport {\n    Runtime,\n    Example\n}","import React from \"react\";\nimport JSX from \"react/jsx-runtime\";\n\nimport loadable from \"@loadable/component\";\n\nconst packages: {\n    [key: string]: any;\n} = {\n    \"react\": React,\n    \"react/jsx-runtime\": JSX,\n    \"@loadable/component\": loadable\n};\n\nconst require = (name: string): any => {\n    console.log('pack', name)\n    return packages[name]\n};\n\nconst getParsedModule = (code: string) => {\n    const module = {\n        exports: {},\n    };\n    Function(\"require, exports, module\", code)(require, module.exports, module);\n    return module;\n};\n\nconst fetchComponent: (url: string) => Promise<string> = (url: string) => {\n    return fetch(url).then(res => {\n        if (!res.ok) {\n            throw new Error(\"Network response was not ok\");\n        }\n        return res.text();\n    });\n};\n\nconst loadComponent: (url: string) => Promise<Record<any, any>> = (url: string) => {\n    return fetchComponent(url).then(async (js) => {\n        const module = getParsedModule(js);\n        console.log('module', module)\n        return module.exports;\n    });\n};\n\nexport default loadComponent;","import loadable from \"@loadable/component\";\nimport {loadComponent} from \"../Plugin\";\n\nconst lazy = (url: string) => {\n    return loadable(() => {\n        return loadComponent(url).then(res => res.Example)\n    }, {\n        fallback: <div>加载中</div>,\n    })\n}\n\nexport default lazy;","import React, {useMemo} from \"react\";\nimport lazy from \"./lazy.tsx\";\n\nconst DynamicComponent: React.FC<{\n    url: string\n} & Record<any, any>> = (props) => {\n\n    const Component = useMemo(() => {\n        return lazy(props.url);\n    }, [props.url])\n\n    return <Component {...props}/>;\n};\n\nexport default DynamicComponent;"],"names":["Example","error","setError","jsxs","jsx","Runtime","__publicField","packages","React","JSX","loadable","require","name","getParsedModule","code","module","fetchComponent","url","res","loadComponent","js","lazy","DynamicComponent","props","Component","useMemo"],"mappings":"mlBAGM,MAAAA,EAGD,CAAC,CAAC,MAAAC,EAAO,SAAAC,YAGF,MAEJ,CAAA,SAAA,CAAAC,OAAC,IAAE,CAAA,SAAA,CAAA,SAAOF,CAAA,EAAM,EAEhBG,MAAC,SAAO,CAAA,QAAS,IAAM,CACnBF,GAAYA,EAAa,IAAA,OAAO,QAAQ,EAAE,UAAU,CAAA,EACrD,SACH,SAAA,CACJ,CAAA,CAAA,ECXJ,MAAMG,CAA4B,CAAlC,cACaC,EAAA,eAAkB,SAC/B,CCHA,MAAMC,EAEF,CACA,MAASC,EACT,oBAAqBC,EACrB,sBAAuBC,CAC3B,EAEMC,EAAWC,IACL,QAAA,IAAI,OAAQA,CAAI,EACjBL,EAASK,CAAI,GAGlBC,EAAmBC,GAAiB,CACtC,MAAMC,EAAS,CACX,QAAS,CAAC,CAAA,EAEd,gBAAS,2BAA4BD,CAAI,EAAEH,EAASI,EAAO,QAASA,CAAM,EACnEA,CACX,EAEMC,EAAoDC,GAC/C,MAAMA,CAAG,EAAE,KAAYC,GAAA,CACtB,GAAA,CAACA,EAAI,GACC,MAAA,IAAI,MAAM,6BAA6B,EAEjD,OAAOA,EAAI,MAAK,CACnB,EAGCC,EAA6DF,GACxDD,EAAeC,CAAG,EAAE,KAAK,MAAOG,GAAO,CACpC,MAAAL,EAASF,EAAgBO,CAAE,EACzB,eAAA,IAAI,SAAUL,CAAM,EACrBA,EAAO,OAAA,CACjB,ECrCCM,EAAQJ,GACHP,EAAS,IACLS,EAAcF,CAAG,EAAE,KAAKC,GAAOA,EAAI,OAAO,EAClD,CACC,SAAWd,EAAAA,IAAA,MAAA,CAAI,SAAG,KAAA,CAAA,CAAA,CACrB,ECLCkB,EAEmBC,GAAU,CAEzB,MAAAC,EAAYC,EAAAA,QAAQ,IACfJ,EAAKE,EAAM,GAAG,EACtB,CAACA,EAAM,GAAG,CAAC,EAEP,OAAAnB,EAAA,IAACoB,EAAW,CAAA,GAAGD,CAAM,CAAA,CAChC"}